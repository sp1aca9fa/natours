extends base
include _reviewCard

block append head
  //- Xx: whatever we write to this block will be appended to the content that is already in that block
  //- Xx: we could also use prepend so the contents from this code would be added to the beginning of the block
  //- script(src='/js/mapbox.js')
  //- Xx: had to move the script to the bottom of the page because the map with the js would not be loaded by the time the DOM runs the head, so the code would not work
  //- Xx: from Q&A by Hiroshi
  link(rel='stylesheet' href='/lib/leaflet.css')
  script(type='module' src='/lib/leaflet.js' defer) 
  script(type='module' src='/js/leaflet.js' defer)
  //- Xx: testing multiple times what would make leaflet stop giving unexpected import errors; solution was to include "type='module' " when importing the script in tour.pug
  //- script(src='https://js.stripe.com/v3/')
  //- Xx: adding the stripe object in tour.pug so we can use that in stripe.js
  //- Xx: moving stripe to all pages due to undefined error per video (tho I had already solved the issue with a different solution from Q&A)

//- Xx: mixin is a variable in pug (also works in css I think?), so we can use it to avoid repeated code
mixin overviewBox(label, text, icon)
  .overview-box__detail
    svg.overview-box__icon
      use(xlink:href=`/img/icons.svg#icon-${icon}`)
    span.overview-box__label= label
    span.overview-box__text= text

block content
  section.section-header
    .header__hero
      .header__hero-overlay &nbsp;
      img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)

    .heading-box
      h1.heading-primary
        span= `${tour.name} tour`
      .heading-box__group
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-clock')
          span.heading-box__text= `${tour.duration} days`
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-map-pin')
          span.heading-box__text= tour.startLocation.description

  section.section-description
    .overview-box
      div
        .overview-box__group
          h2.heading-secondary.ma-bt-lg Quick facts
          
          //- Xx: use - to do js that wont produce any output
          - const date = tour.startDates[0].toLocaleString('en-us', {day: 'numeric', month: 'short', year: 'numeric'})
          //- Xx: use + to call a mixin
          +overviewBox('Next date', date, 'calendar')
          +overviewBox('Difficulty', tour.difficulty, 'trending-up')
          +overviewBox('Participants', `${tour.maxGroupSize} people`, 'user')
          +overviewBox('Rating', `${tour.ratingsAverage}/5`, 'star')

        .overview-box__group
          h2.heading-secondary.ma-bt-lg Your tour guides
          each guide in tour.guides
            .overview-box__detail
              img.overview-box__img(src=`/img/users/${guide.photo}`, alt=`${guide.name}`)
              
              - if (guide.role === 'lead-guide')
                span.overview-box__label Lead guide
              - if (guide.role === 'guide')
                span.overview-box__label Tour guide
              span.overview-box__text= guide.name

    .description-box
      h2.heading-secondary.ma-bt-lg= `About ${tour.name} tour`
      - const paragraphs = tour.description.split('\n')
      each p in paragraphs
        p.description__text= p

  section.section-pictures
    each img, i in tour.images
      //- Xx: in a pug loop we can define a 2nd variable; we define the index as i (0 for the first element, 1 for the 2nd, etc)
      .picture-box
        //- Xx: original code: img.picture-box__img.picture-box__img--1(src=`/img/tours/${img}`, alt=`${tour.name} Tour ${i + 1}`); changed the .picture-box__img--1 to inside the () so that we can introduce a variable
        img.picture-box__img(src=`/img/tours/${img}`, alt=`${tour.name} Tour ${i + 1}`, class=`picture-box__img--${i + 1}`)
  
  section.section-map
    #map(data-locations=`${JSON.stringify(tour.locations)}`)
      //- Xx: As we are running the template we already have all the tour data, so instead of calling the API again (AJAX), we simply run some html to access the data we need, so we can use that data in js
      //- Xx: the above specifies a data attribute in html and read the attribute that data in javascript
      //- Xx: data is the call? I think and locations is simply how we want to call the data
      //- Xx: the data will get stored in the dataset property (dataset.locations) because its called data-


  section.section-reviews
    .reviews
      each review in tour.reviews
        +reviewCard(review)

  //- cta is call to action
  section.section-cta
    .cta
      .cta__img.cta__img--logo
        img(src='/img/logo-white.png', alt='Natours logo')
      img.cta__img.cta__img--1(src=`/img/tours/${tour.images[1]}`, alt='Tour picture')
      img.cta__img.cta__img--2(src=`/img/tours/${tour.images[2]}`, alt='Tour picture')
      .cta__content
        h2.heading-secondary What are you waiting for?
        p.cta__text= `${tour.duration} days. 1 adventure. Infinite memories. Make it yours today!`
        
        if user
          button.btn.btn--green.span-all-rows#book-tour(data-tour-id=`${tour.id}`) Book tour now!
          //- Added #book-tour() to send tourID to the checkout session
          //- to specify the tour id, we use (data-) and include the data we need
        else
          a.btn.btn--green.span-all-rows(href='/login') Log in to book tour
          //- Xx: changed from button to a element. a element is anchor (meaning it has a link)